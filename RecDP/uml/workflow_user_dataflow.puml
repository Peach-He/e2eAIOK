@startuml

actor User
participant FeatureWrangler
database FeatureStore

User -> FeatureWrangler: init(datasets(jsons, csvs),\nlabel_name)
FeatureWrangler -> DataProfiler: init(first_file)
DataProfiler -> PrimitivesLibrary: init()
DataProfiler -> PrimitivesLibrary: for p in primitives; \n\tif fit_prepare() append DAG pipeline
DataProfiler <-- PrimitivesLibrary: return DAG[primitives]
DataProfiler -> PrimitivesLibrary: fit_transform(engine_type)
DataProfiler <-- PrimitivesLibrary: cleaned_tabular_data
DataProfiler --> FeatureWrangler: cleaned_tabular_data
FeatureWrangler -> FeatureStore: auto data lineage
FeatureWrangler --> User: notify user

User -> FeatureWrangler: fit_transform()
FeatureWrangler -> PrimitivesLibrary: init(dataset)
FeatureWrangler -> PrimitivesLibrary: for p in primitives; \n\tif fit_prepare() append DAG pipeline
FeatureWrangler <-- PrimitivesLibrary: return DAG[primitives]
FeatureWrangler -> PrimitivesLibrary: fit_transform(engine_type)
FeatureWrangler <-- PrimitivesLibrary: transformed_data

FeatureWrangler --> User: transformed_data

@enduml